#!/bin/bash

set -e

VERSION=$1

# make sure we are in a source dir
if [ ! -e build.xml ]; then
    echo "This does not look a like a source directory. Exiting..."
    exit 1
fi

TOP_DIR=`mktemp -d`
echo "RPM Dir: $TOP_DIR"

function cleanup() {
    rm -rf $TOP_DIR
}
trap cleanup EXIT

mkdir -p $TOP_DIR/build/rpm/BUILD $TOP_DIR/build/rpm/RPMS $TOP_DIR/build/rpm/SOURCES $TOP_DIR/build/rpm/SPECS $TOP_DIR/build/rpm/SRPMS

# create a new spec file with the custom version
BASEVER=`echo "$VERSION" | perl -p -e 's/([0-9]+\.[0-9]+\.[0-9]+).*/\1/'`
EXTRAVER=`echo "$VERSION" | perl -p -e 's/[0-9]+\.[0-9]+\.[0-9]+//'`
EXTRAVER=${EXTRAVER/#-/_}
RELEASE_VERSION="1%{?dist}"
if [ "x$EXTRAVER" != "x" ]; then
    # add timestamp - the goal is a version number like:
    # 4.8.1dev-0.1.201709070934
    RELEASE_VERSION="0.1."`date +'%Y%m%d%H%M'`"%{?dist}"
fi

cp dist/pegasus-$VERSION.tar.gz $TOP_DIR/build/rpm/SOURCES/pegasus-$BASEVER$EXTRAVER.tar.gz
cp pegasus.spec.in pegasus.spec
DATE_RPM=`date +'%a %b %d %Y'`
perl -p -i -e "s/\\@PEGASUS_VERSION\\@/$BASEVER$EXTRAVER/g" pegasus.spec
perl -p -i -e "s/\\@DATE\\@/$DATE_RPM/g" pegasus.spec
perl -p -i -e "s/^Release:.*/Release:        $RELEASE_VERSION/g" pegasus.spec

cp pegasus.spec $TOP_DIR/build/rpm/SPECS/

DIST=`./release-tools/getosid | perl -pe 's/rhel/.el/'`

rpmbuild \
    -ba \
    --define "_topdir $TOP_DIR/build/rpm" \
    --define "dist $DIST" \
    --define "_version $VERSION" \
    pegasus.spec

find $TOP_DIR/build/rpm -name \*.rpm -exec cp {} dist/ \;
rm -f dist/*debug*
mv dist/pegasus-*.src.rpm dist/pegasus-$VERSION.src.rpm
cd dist
echo "Generated RPMs:"
ls -l *.rpm
