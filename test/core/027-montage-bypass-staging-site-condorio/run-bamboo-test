#!/bin/bash

set -e

TOP_DIR=`pwd`

export PATH=/scitech/shared/software/el8/montage/current/bin:$PATH

rm -rf montage-workflow-v3
git clone https://github.com/pegasus-isi/montage-workflow-v3.git

echo
cd montage-workflow-v3
./montage-workflow.py --center "275.196290 -16.171530" \
                      --degrees 0.2 \
                      --band 2mass:j:green \
                      --band 2mass:h:blue \
                      --band 2mass:k:red

export http_proxy="workflow.isi.edu:3128"

echo
echo "Retrieving input fit files before the workflow gets planned"
mkdir inputs
mv data/rc.txt data/rc.txt.ORIG
IFS=$'\n'
for line in `cat data/rc.txt.ORIG | egrep -v '^#'`; do
    lfn=`echo $line | awk '{print $1}'`
    url=`echo $line | awk '{print $2}' | sed 's/"//g'`
    if (echo $url | grep http:) >/dev/null 2>&1; then
        echo "$url"
        curl -s -L -o inputs/$lfn $url
        echo "$lfn \"file://${PWD}/inputs/${lfn}\" pool=\"local\"" >>data/rc.txt
    else
        echo $line >>data/rc.txt
    fi
done

pegasus-plan \
        --conf ../pegasusrc \
        --dir work \
        --relative-dir `date +'%s'` \
        --sites condor_pool \
        --output-sites local \
        --cluster horizontal \
	data/montage.dax \
        | tee $TOP_DIR/plan.out


WORK_DIR=`cat $TOP_DIR/plan.out | grep pegasus-run | sed -E 's/.*pegasus-run[ ]+//'` 
if [ "x$WORK_DIR" = "x" ]; then
    echo "Unable to determine work directory from the planner output"
    exit 1
fi
echo "work directory is $WORK_DIR"
cd $WORK_DIR

# we should have no stage in jobs - they should all be bypassed
if (find $WORK_DIR -name stage_in\* | grep stage_in) >/dev/null 2>&1; then
    echo "Error: Found stage in jobs, even though we should have full bypass in this test"
    exit 1
fi

# make sure that none of the input files are deleted by cleanup jobs
for CLEANUP_IN in `find $WORK_DIR -name clean_up_local_\*.in`; do
    if (cat $CLEANUP_IN | grep "file://" | grep "$PWD/inputs") >/dev/null 2>&1; then
        echo "Error: $CLEANUP_IN is specifying file:// in the inputs directory"
        exit 1
    fi
done

# now we are good to submit
echo "Submitting the workflow for execution"
pegasus-run $WORK_DIR

