#!/bin/bash

#######################################################################
# settings

# Max number of seconds allowed for the planner to plan the
# dax - if these limit is exeeded, the test fails
MAX_SECONDS=1600

# Min number of seconds allowed for the planner to plan the
# dax - if these limit is exeeded, the test fails. This is used
# to detect big improvements in the planner which would mean it
# is time to lower the upper (and lower) limits of this test
MIN_SECONDS=200

#######################################################################

set -e

TOPDIR=`pwd`

PYTHONPATH=$(pegasus-config --python) ./100k.py $REMOTE_PEGASUS_HOME > 100k.dax

# create the site catalog
cat > sites.yml <<EOF
pegasus: "5.0"
sites:
 -
  name: "condorpool"
  arch: "x86_64"
  os.type: "linux"
  profiles:
    env:
      PEGASUS_HOME: "/usr"
    condor:
      universe: "vanilla"
    pegasus:
      style: "condor"
 -
  name: "local"
  arch: "x86_64"
  os.type: "linux"
  directories:
   -
    type: "sharedStorage"
    path: "$TOPDIR/outputs"
    fileServers:
     -
      operation: "all"
      url: "file://$TOPDIR/outputs"
   -
    type: "sharedScratch"
    path: "$TOPDIR/work"
    fileServers:
     -
      operation: "all"
      url: "file://$TOPDIR/work"
EOF

START_TS=`/bin/date +'%s'`

# plan the workflow
/usr/bin/time pegasus-plan \
    -v \
    --conf pegasusrc \
    --sites condorpool \
    --dir submit \
    --output-sites local \
    100k.dax \
    | tee plan.out


END_TS=`/bin/date +'%s'`
DURATION=$(($END_TS - $START_TS))
echo
echo "Planner took $DURATION seconds"
echo "The lower limit was $MIN_SECONDS seconds"
echo "The upper limit was $MAX_SECONDS seconds"
echo

if [ $DURATION -gt $MAX_SECONDS ]; then
    echo "Error: Limit exceeded!"
    exit 1
fi

if [ $DURATION -lt $MIN_SECONDS ]; then
    echo "Error: Planning was faster than lower limit - time to lower limits!"
    exit 1
fi

echo "Test passed!"
