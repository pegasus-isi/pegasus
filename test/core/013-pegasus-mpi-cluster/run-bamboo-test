#!/bin/bash

set -e

TEST_DIR=$PWD

# figure out where Pegasus is installed
export PEGASUS_BIN_DIR=`pegasus-config --bin`
if [ "x$PEGASUS_BIN_DIR" = "x" ]; then
    echo "Please make sure pegasus-plan is in your path"
    exit 1
fi

# Extract the ctools archive

# Generate dax
PYTHONPATH=$(pegasus-config --python) python3 daxgen.py dax.yml

export PATH=/usr/lib64/mpich/bin:$PATH
MPIEXEC=`which mpiexec`

cat > sites.yml <<END
pegasus: "5.0"
sites:
 -
  name: "local"
  arch: "x86_64"
  os.type: "linux"
  os.release: "rhel"
  os.version: "7"
  directories:
   -
    type: "sharedStorage"
    path: "$TEST_DIR/output"
    fileServers:
     -
      operation: "all"
      url: "file://$TEST_DIR/output"
   -
    type: "sharedScratch"
    path: "$TEST_DIR/exec"
    fileServers:
     -
      operation: "all"
      url: "file://$TEST_DIR/exec"
  grids:
   -
    type: "gt5"
    contact: "localhost/jobmanager-fork"
    scheduler: "fork"
    jobtype: "auxillary"
  profiles:
    env:
      PEGASUS_BIN_DIR: "$PEGASUS_BIN_DIR"
      MPIEXEC: "$MPIEXEC"
END

cat > tc.data <<END
tr pegasus::mpiexec {
    site local {
        pfn "$TEST_DIR/pegasus-mpi-cluster-wrapper"
        arch "x86"
        os "linux"
        type "INSTALLED"
        profile globus "maxwalltime" "240"
        profile pegasus "cluster.arguments" "--host-memory 1024"
    }
}
END

echo "Planning and submitting the workflow..."
pegasus-plan \
    --conf pegasusrc \
    --dir work \
    --sites local \
    --cleanup leaf \
    --cluster label \
    --submit -v \
    dax.yml

