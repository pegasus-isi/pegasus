#!/bin/bash

set -e



if [ X${testdir} = "X" ]; then
    testdir=`dirname  $0`
    export testdir
fi

TOPDIR=`pwd`

# generate the input file
echo "This is sample input to KEG" >f.a

# output directory
mkdir -p outputs

# build the dax generator
CLASSPATH=.:$(pegasus-config --classpath) javac $testdir/BlackDiamondDAX.java

# generate the dax
CLASSPATH=.:$(pegasus-config --classpath) java BlackDiamondDAX "$(dirname $(dirname $(which pegasus-version)))" blackdiamond.dax

# create the site catalog
cat >sites.xml <<EOF
<?xml version="1.0" encoding="UTF-8"?>
<!-- generated: 2015-03-09T17:32:39-07:00 -->
<!-- generated by: vahi [??] -->
<sitecatalog xmlns="http://pegasus.isi.edu/schema/sitecatalog" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://pegasus.isi.edu/schema/sitecatalog http://pegasus.isi.edu/schema/sc-4.0.xsd" version="4.0">
<site handle="local" arch="x86_64" os="LINUX" osrelease="rhel" osversion="8">
        <directory  path="$TOPDIR/outputs" type="shared-storage" free-size="" total-size="">
                <file-server  operation="all" url="file://$TOPDIR/outputs">
                </file-server>
        </directory>
        <directory  path="$TOPDIR/work/scratch" type="shared-scratch" free-size="" total-size="">
                <file-server  operation="all" url="file://$TOPDIR/work/scratch">
                </file-server>
        </directory>
	<profile namespace="pegasus" key="pegasus_lite_env_source">${TOPDIR}/job-setup.sh</profile>
</site>
</sitecatalog>
EOF

# plan and submit the  workflow
pegasus-plan \
    --conf $testdir/pegasusrc \
    --sites local \
    --dir work/dags \
    --output-sites local \
    --cluster horizontal \
    blackdiamond.dax \
    | tee $TOPDIR/plan.out


WORK_DIR=`cat plan.out | grep pegasus-run | sed -E 's/.*pegasus-run[ ]+(.*)[ ]+/\1/'`
# account for deep submit directory structure
cd $WORK_DIR/00/00

# PM-1192 make sure the env variable PEGASUS_LITE_ENV_SOURCE is set
for sub in ` ls *sub | grep -E "analyze|findrange|preprocess"`; do
    pegasus_lite_env_source_set=`(grep environment $sub | grep PEGASUS_LITE_ENV_SOURCE) 2>/dev/null || /bin/true`
    if [ "x$pegasus_lite_env_source_set" == "x" ]; then
        echo "ERROR: PEGASUS_LITE_ENV_SOURCE not set in environment for $sub"
        exit 1
    fi
done

pegasus-run $WORK_DIR
