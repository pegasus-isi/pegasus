#!/bin/bash

set -e

TOP_DIR=`pwd`

export PATH=/scitech/shared/software/el8/montage/current/bin:$PATH

rm -rf montage-workflow-v3
git clone https://github.com/pegasus-isi/montage-workflow-v3.git

echo
cd montage-workflow-v3
sed -i 's/wf.add_replica_catalog(rc)/rc.write("data\/rc.yml")/g' montage-workflow.py
PYTHONPATH=$(pegasus-config --python) \
    ./montage-workflow.py --center "275.196290 -16.171530" \
                      --degrees 0.2 \
                      --band 2mass:j:green \
                      --band 2mass:h:blue \
                      --band 2mass:k:red

cat >../pegasus.properties <<EOF
pegasus.stageout.clusters = 20

#we don't want errors for registration to be masked because of retries
dagman.retry = 0
EOF

cat $HOME/.jdbcrc-test.conf >> ../pegasus.properties


echo "Updating the database..."
pegasus-db-admin update --conf ../pegasus.properties -t jdbcrc

echo "Cleanning the database..."
pegasus-rc-client --conf ../pegasus.properties list >tmp.list
pegasus-rc-client --conf ../pegasus.properties --delete tmp.list
rm -f tmp.list

echo "Inserting new data on the database..."
pegasus-rc-converter -I YAML -O File -i data/rc.yml -o data/rc.txt -vvv
pegasus-rc-client -vvv --conf ../pegasus.properties --insert data/rc.txt

echo "Planning and submitting the workflow..."
pegasus-plan \
    --conf ../pegasus.properties \
    --sites condorpool \
    --dir work \
    --output-sites local \
    --cleanup leaf \
    --cluster horizontal \
    --submit \
    data/montage-workflow.yml \
    | tee $TOP_DIR/plan.out
