[build-system]

requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools]

zip-safe = false

[tool.setuptools.packages.find]

where = ["src"]
namespaces = true

[project]

name = "pegasus-wms.common"
version = "5.1.2-dev.0"
authors = [{ name = "Pegasus Team", email = "pegasus@isi.edu" }]
maintainers = [{ name = "Rajiv Mayani", email = "mayani@isi.edu" }]
description = "Pegasus Workflow Management System Python API"
readme = { file = "README.md", content-type = "text/markdown" }
license = "Apache-2.0"
license-files = ["LICENSE.md"]
requires-python = ">=3.6"
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Intended Audience :: Developers",
  "Intended Audience :: Science/Research",
  "Operating System :: Unix",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.6",
  "Programming Language :: Python :: 3.7",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Topic :: Scientific/Engineering",
  "Topic :: Utilities",
]
dependencies = ["PyYAML>5.3", "dataclasses;python_version=='3.6'"]

[dependency-groups]

dev = ["ruff", "tox"]

[project.urls]

Homepage = "https://pegasus.isi.edu"
Documentation = "https://pegasus.isi.edu/documentation/"
Changes = "https://pegasus.isi.edu/blog/?category_name=Release"
Repository = "https://github.com/pegasus-isi/pegasus"
Issues = "https://github.com/pegasus-isi/pegasus/issues"


[tool.isort]

profile = "black"
known_first_party = "Pegasus"
forced_separate = "Pegasus"
skip = [
  ".eggs",
  ".git",
  ".hg",
  ".mypy_cache",
  ".nox",
  ".pants.d",
  ".tox",
  ".venv",
  "_build",
  "buck-out",
  "build",
  "dist",
  "node_modules",
  "venv",
  "Pegasus/cli",
]


[tool.black]

target-version = ["py36"]

exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | Pegasus/cli
)/
'''


[tool.flake8]

max-line-length = 88
ignore = ["W503"]
exclude = [
  ".git",
  ".tox",
  "*.egg-info",
  "htmlcov",
  "test-reports",
  ".pytest_cache",
  "__pycache__",
  "build",
]


[tool.pytest.ini_options]

pythonpath = ["src"]
testpaths = ["test"]


[tool.coverage.run]

source = ["src"]
